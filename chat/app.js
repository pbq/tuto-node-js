//pseudo code/*Il renvoie le fichier index.html quand un client demande à charger la page dans son navigateur.Il se prépare à recevoir des requêtes via socket.io.Ici, on s'attend à recevoir un seul type de message : la connexion.Lorsqu'on se connecte via socket.io, on logge ici l'information dans la console.*/var http = require('http');var fs = require('fs');/***************************************//*    Chargement du serveur            *//***************************************/// Chargement du fichier index.html affiché au clientvar server = http.createServer(function(req, res) {  fs.readFile('./index_bis.html', 'utf-8', function(error, content) {    res.writeHead(200, {"Content-Type": "text/html"});    res.end(content);  });});/***************************************//*    Chargement de  socket.io         *//***************************************/var io = require('socket.io').listen(server);// Quand on client se connecte, on le note dans la console/*io.sockets.on('connection', function (socket) {    //ici, on ecrit le message dans la console    console.log('Un client est connecté !');  });*//*// ici, on envoie un message (string) depuis le serveurio.sockets.on('connection', function (socket) {  socket.emit('message', 'Vous êtes bien connecté !');});*/// ici, on envoie un message (objet) depuis le serveur/*io.sockets.on('connection', function (socket) {  socket.emit('message', { content: 'Vous êtes bien connecté !', importance: '1' });});*//*io.sockets.on('connection', function (socket) {  //envoi du premier message à la connexion  socket.emit('message', 'Vous êtes bien connecté !');  console.log('Un client est connecté !');  // Quand le serveur reçoit un signal de type "message" du client  socket.on('message', function (message) {    console.log('Un client me parle ! Il me dit : ' + message);  });});*//*io.sockets.on('connection', function (socket) {  socket.emit('message', 'Vous êtes bien connecté !');  socket.broadcast.emit('message', 'Un autre client vient de se connecter !');  //le broadcast envoi un message aux autres utilisateurs connectés au serveur  socket.on('message', function (message) {    console.log('Un client me parle ! Il me dit : ' + message);  });});*/io.sockets.on('connection', function (socket, pseudo) {  // Quand on client se connecte, on lui envoie un message  socket.emit('message', 'Vous êtes bien connecté !');  // On signale aux autres clients qu'il y a un nouveau venu  socket.broadcast.emit('message', 'Un autre client vient de se connecter ! ');  // Dès qu'on nous donne un pseudo, on le stocke en variable de session  socket.on('petit_nouveau', function(pseudo) {    socket.pseudo = pseudo;    });  // Dès qu'on reçoit un "message" (clic sur le bouton), on le note dans la console  socket.on('message', function (message) {    // On récupère le pseudo de celui qui a cliqué dans les variables de session    console.log(socket.pseudo + ' me parle ! Il me dit : ' + message);  });});server.listen(8080);