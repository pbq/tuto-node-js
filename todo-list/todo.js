/*TODOLIST:Modification des noms des tâchesRéagencement des tâches entre ellesExportation CSVAttribution d'une priorité et d'une date limitePersistence de la todolist (stockage dans une base de données ou une base NoSQL) Partage d'une todolist entre plusieurs personnesSynchronisation de la todolist en temps réel entre les personnes sans avoir besoin de recharger la page*/var express = require('express');var cookieParser = require('cookie-parser');var bodyParser = require('body-parser');var session = require('express-session');var app = express();/* On utilise les cookies, les sessions et les formulaires */app.use(cookieParser()).use(session({secret: 'todotopsecret'})).use(bodyParser()).use(function(req, res, next){  if (typeof(req.session.todolist) == 'undefined') {    req.session.todolist = []; }  next();  })/* On affiche la todolist et le formulaire */app.get('/todo', function(req, res) {    res.render('todolist.ejs', {todolist: req.session.todolist} );    });/* On ajoute un élément à la todolist */app.post('/todo/ajouter', function(req, res) {  if (req.body.newtodo != '') {    res.send(req.session.todolist.push(req.body.newtodo));  }  res.redirect('/todo');    });/* suppression d'un element de la todo */app.get('/todo/supprimer/:id', function(req, res) {    if (req.params.id != '') {      req.session.todolist.splice(req.params.id, 1);    }    res.redirect('/todo');    });/* On modifie un élement dè la todolist */app.post('/todo/update/:id', function(req, res) {  if (req.body.newtodo != '') {    req.session.todolist[req.params.id] = req.body.newtodo    res.send(req.session.todolist);  }  res.redirect('/todo');    });/* On redirige vers la todolist si la page demandée n'est pas trouvée */app.use(function(req, res, next){  res.redirect('/todo');})app.listen(8080);